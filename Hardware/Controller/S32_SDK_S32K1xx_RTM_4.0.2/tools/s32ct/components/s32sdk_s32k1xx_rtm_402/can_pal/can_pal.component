<?xml version="1.0" encoding= "UTF-8" ?>
<component:config_component id="can_pal_config" label="can_pal" global_only="false" xsi:schemaLocation="http://swtools.freescale.net/XSD/component/1.0 http://swtools.freescale.net/XSD/component/1.0/component.xsd" xmlns:component="http://swtools.freescale.net/XSD/component/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" category="driver_pal">
   <sw_comp_ref name="platform.pal.can_pal" version="1.0.0"/>
   <description>CAN_PAL Component</description>
   <mode id="general" label="General Mode" available="true">
      <description>CAN PAL General</description>
      <config_set_refs>
         <config_set_ref>can_pal</config_set_ref>
      </config_set_refs>
      <master_peripheral>
         <peripheral_type>CAN</peripheral_type>
      </master_peripheral>
   </mode>
   <config_set id="can_pal" label="CAN Pal Configuration Settings" from_source="can_pal.h">
      <description>CAN PAL Component</description>
      <fragment_defs/>
      <code/>
      <validation/>
      <quick_selections>
         <quick_selection id="dv_can_pal0" label="Default Values for CAN_PAL0" available="getPeriphInstanceIndex($instance.getPeripheral()) == 0">
            <description>CAN_PAL Configuration</description>
            <set id="can_user_config_t2.name">can_config0</set>
            <set id="can_user_config_t2.maxBuffNum">16</set>
            <set id="can_user_config_t2.mode">CAN_NORMAL_MODE</set>
            <set id="can_instance_t2.name">can_instance0</set>
            <set id="can_fifo_ext2.struct_extension.idFilterTable">NULL</set>
            <set id="can_fifo_ext2.name">can_fifo_ext0</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.propSeg">7</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.phaseSeg1">4</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.phaseSeg2">1</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.rJumpwidth">1</set>
         </quick_selection>
         <quick_selection id="dv_can_pal1" label="Default Values for CAN_PAL1" available="getPeriphInstanceIndex($instance.getPeripheral()) == 1">
            <description>CAN_PAL Configuration</description>
            <set id="can_user_config_t2.name">can_config1</set>
            <set id="can_user_config_t2.maxBuffNum">16</set>
            <set id="can_user_config_t2.mode">CAN_NORMAL_MODE</set>
            <set id="can_instance_t2.name">can_instance1</set>
            <set id="can_fifo_ext2.struct_extension.idFilterTable">NULL</set>
            <set id="can_fifo_ext2.name">can_fifo_ext1</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.propSeg">7</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.phaseSeg1">4</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.phaseSeg2">1</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.rJumpwidth">1</set>
         </quick_selection>
         <quick_selection id="dv_can_pal2" label="Default Values for CAN_PAL2" available="getPeriphInstanceIndex($instance.getPeripheral()) == 2">
            <description>CAN_PAL Configuration</description>
            <set id="can_user_config_t2.name">can_config2</set>
            <set id="can_user_config_t2.maxBuffNum">16</set>
            <set id="can_user_config_t2.mode">CAN_NORMAL_MODE</set>
            <set id="can_instance_t2.name">can_instance2</set>
            <set id="can_fifo_ext2.struct_extension.idFilterTable">NULL</set>
            <set id="can_fifo_ext2.name">can_fifo_ext2</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.propSeg">7</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.phaseSeg1">4</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.phaseSeg2">1</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.rJumpwidth">1</set>
         </quick_selection>
         <quick_selection id="dv_can_pal3" label="Default Values for CAN_PAL3" available="getPeriphInstanceIndex($instance.getPeripheral()) == 3">
            <description>CAN_PAL Configuration</description>
            <set id="can_user_config_t2.name">can_config3</set>
            <set id="can_user_config_t2.maxBuffNum">16</set>
            <set id="can_user_config_t2.mode">CAN_NORMAL_MODE</set>
            <set id="can_instance_t2.name">can_instance3</set>
            <set id="can_fifo_ext2.struct_extension.idFilterTable">NULL</set>
            <set id="can_fifo_ext2.name">can_fifo_ext3</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.propSeg">7</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.phaseSeg1">4</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.phaseSeg2">1</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.rJumpwidth">1</set>
         </quick_selection>
         <quick_selection id="dv_can_pal4" label="Default Values for CAN_PAL4" available="getPeriphInstanceIndex($instance.getPeripheral()) == 4">
            <description>CAN_PAL Configuration</description>
            <set id="can_user_config_t2.name">can_config4</set>
            <set id="can_user_config_t2.maxBuffNum">16</set>
            <set id="can_user_config_t2.mode">CAN_NORMAL_MODE</set>
            <set id="can_instance_t2.name">can_instance4</set>
            <set id="can_fifo_ext2.struct_extension.idFilterTable">NULL</set>
            <set id="can_fifo_ext2.name">can_fifo_ext4</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.propSeg">7</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.phaseSeg1">4</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.phaseSeg2">1</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.rJumpwidth">1</set>
         </quick_selection>
         <quick_selection id="dv_can_pal5" label="Default Values for CAN_PAL5" available="getPeriphInstanceIndex($instance.getPeripheral()) == 5">
            <description>CAN_PAL Configuration</description>
            <set id="can_user_config_t2.name">can_config5</set>
            <set id="can_user_config_t2.maxBuffNum">16</set>
            <set id="can_user_config_t2.mode">CAN_NORMAL_MODE</set>
            <set id="can_instance_t2.name">can_instance5</set>
            <set id="can_fifo_ext2.struct_extension.idFilterTable">NULL</set>
            <set id="can_fifo_ext2.name">can_fifo_ext5</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.propSeg">7</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.phaseSeg1">4</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.phaseSeg2">1</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.rJumpwidth">1</set>
         </quick_selection>
         <quick_selection id="dv_can_pal6" label="Default Values for CAN_PAL6" available="getPeriphInstanceIndex($instance.getPeripheral()) == 6">
            <description>CAN_PAL Configuration</description>
            <set id="can_user_config_t2.name">can_config6</set>
            <set id="can_user_config_t2.maxBuffNum">16</set>
            <set id="can_user_config_t2.mode">CAN_NORMAL_MODE</set>
            <set id="can_instance_t2.name">can_instance6</set>
            <set id="can_fifo_ext2.struct_extension.idFilterTable">NULL</set>
            <set id="can_fifo_ext2.name">can_fifo_ext6</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.propSeg">7</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.phaseSeg1">4</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.phaseSeg2">1</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.rJumpwidth">1</set>
         </quick_selection>
         <quick_selection id="dv_can_pal7" label="Default Values for CAN_PAL7" available="getPeriphInstanceIndex($instance.getPeripheral()) == 7">
            <description>CAN_PAL Configuration</description>
            <set id="can_user_config_t2.name">can_config7</set>
            <set id="can_user_config_t2.maxBuffNum">16</set>
            <set id="can_user_config_t2.mode">CAN_NORMAL_MODE</set>
            <set id="can_instance_t2.name">can_instance7</set>
            <set id="can_fifo_ext2.struct_extension.idFilterTable">NULL</set>
            <set id="can_fifo_ext2.name">can_fifo_ext7</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.propSeg">7</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.phaseSeg1">4</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.phaseSeg2">1</set>
            <set id="can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.rJumpwidth">1</set>
         </quick_selection>
         <default>dv_can_pal</default>
      </quick_selections>
      <generated_types>
         <enum id="can_operation_modes_t" label="CAN controller operation modes Implements : can_operation_modes_t_Class" from="can_operation_modes_t">
            <item id="CAN_NORMAL_MODE" label="Normal mode or user mode"/>
            <item id="CAN_LOOPBACK_MODE" label="Loop-back mode"/>
            <item id="CAN_DISABLE_MODE" label="Module disable mode"/>
         </enum>
         <enum id="can_fd_payload_size_t" label="CAN buffer payload sizes Implements : can_fd_payload_size_t_Class" from="can_fd_payload_size_t">
            <item id="CAN_PAYLOAD_SIZE_8" label="8 bytes"/>
            <item id="CAN_PAYLOAD_SIZE_16" label="16 bytes"/>
            <item id="CAN_PAYLOAD_SIZE_32" label="32 bytes"/>
            <item id="CAN_PAYLOAD_SIZE_64" label="64 bytes"/>
         </enum>
         <enum id="can_bitrate_phase_t" label="CAN bitrate phase (nominal/data) Implements : can_bitrate_phase_t_Class" from="can_bitrate_phase_t">
            <item id="CAN_NOMINAL_BITRATE" label="Nominal (FD arbitration) bitrate"/>
            <item id="CAN_FD_DATA_BITRATE" label="FD data bitrate"/>
         </enum>
         <enum id="can_msg_id_type_t" label="CAN Message Buffer ID type Implements : can_msg_id_type_t_Class" from="can_msg_id_type_t">
            <item id="CAN_MSG_ID_STD" label="Standard ID"/>
            <item id="CAN_MSG_ID_EXT" label="Extended ID"/>
         </enum>
         <enum id="can_clk_source_t" label="CAN PE clock sources Implements : can_clk_source_t_Class" from="can_clk_source_t">
            <item id="CAN_CLK_SOURCE_OSC" label="Oscillator clock"/>
            <item id="CAN_CLK_SOURCE_PERIPH" label="Peripheral clock"/>
         </enum>
         <struct id="can_time_segment_t" label="CAN bit timing variables" from="can_time_segment_t">
            <integer id="propSeg" label="Propagation segment" type="uint32_t" options="cStructField">
               <description>Propagation segment</description>
            </integer>
            <integer id="phaseSeg1" label="Phase segment 1" type="uint32_t" options="cStructField">
               <description>Phase segment 1</description>
            </integer>
            <integer id="phaseSeg2" label="Phase segment 2" type="uint32_t" options="cStructField">
               <description>Phase segment 2</description>
            </integer>
            <integer id="preDivider" label="Clock prescaler division factor" type="uint32_t" options="cStructField">
               <description>Clock prescaler division factor</description>
            </integer>
            <integer id="rJumpwidth" label="Resync jump width" type="uint32_t" options="cStructField">
               <description>Resync jump width</description>
            </integer>
         </struct>
         <struct id="can_buff_config_t" label="CAN buffer configuration Implements : can_buff_config_t_Class" from="can_buff_config_t">
            <bool id="enableFD" label="Enable flexible data rate">
               <description>Enable flexible data rate</description>
            </bool>
            <bool id="enableBRS" label="Enable bit rate switch inside a CAN FD frame">
               <description>Enable bit rate switch inside a CAN FD frame</description>
            </bool>
            <integer id="fdPadding" label="Value used for padding when the data length code (DLC) specifies a bigger payload size than the actual data length" type="uint8_t">
               <description>Value used for padding when the data length code (DLC) specifies a bigger payload size than the actual data length</description>
            </integer>
            <reference id="idType" label="Specifies whether the frame format is standard or extended" type="can_msg_id_type_t">
               <description>Specifies whether the frame format is standard or extended</description>
            </reference>
            <bool id="isRemote" label="Specifies if the frame is standard or remote">
               <description>Specifies if the frame is standard or remote</description>
            </bool>
         </struct>
         <struct id="can_message_t" label="CAN message format Implements : can_message_t_Class" from="can_message_t">
            <integer id="cs" label="Code and Status" type="uint32_t">
               <description>Code and Status</description>
            </integer>
            <integer id="id" label="ID of the message" type="uint32_t">
               <description>ID of the message</description>
            </integer>
            <integer id="data" label="Data bytes of the CAN message" type="uint8_t">
               <description>Data bytes of the CAN message</description>
            </integer>
            <integer id="length" label="Length of payload in bytes" type="uint8_t">
               <description>Length of payload in bytes</description>
            </integer>
         </struct>
         <struct id="can_user_config_t" label="CAN controller configuration" from="can_user_config_t" >
            <string id="name" label="Name">
               <description>Configuration name.</description>
               <validation>
                  <constraint cond_expr="isCIdentifier($this.getValue())" level="error" description="Configuration name must be a valid C identifier!"/>
               </validation>
            </string>
            <bool id="readonly" label="Read-only">
               <description>Specifies the configuration structure access modifier; read-only configuration will be declared const.</description>
            </bool>
            <variable id="maxMB" label="Maximum of MBs" value="64" />
            <integer id="maxBuffNum" label="Number of buffers" type="uint32_t" max_expr="($parent.payloadSize.getValue() == `CAN_PAYLOAD_SIZE_8`) ? $parent.maxMB.getValue().toInt() : (($parent.maxMB.getValue().toInt() / 32) * (512 / (regexSubstr($parent.payloadSize.getValue(),`[0-9]{1,2}`,0).toInt() + 8)))" min_expr="$configSet.can_fifo_ext2.isRxFIFO_Enable.getValue() ? 0 : 1" available="true" options="cStructField">
               <description>Set maximum number of buffers</description>
               <validation>
                  <constraint cond_expr="!$configSet.can_fifo_ext2.isRxFIFO_Enable.getValue() || (($this.getValue()+$configSet.can_fifo_ext2.struct_extension.recommendedMb.getValue().toInt()) &lt;= $parent.maxMB.getValue().toInt())" level="error" description="Decrease 'MBs Number' or decrease number of Rx FIFO filters."/>
               </validation>
            </integer>
            <integer id="txBuffNum" label="Set Tx maximum number of buffers" type="uint32_t" available="false" options="cStructField">
               <description>Set maximum number of buffers</description>
               <validation>
                  <constraint cond_expr="($this.getValue() + $parent.rxBuffNum.getValue() &lt; 129)" level="error" description="Value above admissible range! Rx + Tx Max 128"/>
                  <constraint cond_expr="(($this.getValue() + $parent.rxBuffNum.getValue() > 0) || $configSet.can_fifo_ext2.isRxFIFO_Enable.getValue())" level="error" description="Value below admissible range!"/>
                  <constraint cond_expr="!$configSet.can_fifo_ext2.isRxFIFO_Enable.getValue() || (($parent.rxBuffNum.getValue()+$this.getValue()+$configSet.can_fifo_ext2.struct_extension.recommendedMb.getValue().toInt()) &lt; 129)" level="error" description="Decrease 'MBs Number' or decrease number of Rx FIFO filters."/>
                  <constraint cond_expr="!(($parent.payloadSize.getValue() == `CAN_PAYLOAD_SIZE_64`) &amp;&amp; ($this.getValue()+$parent.rxBuffNum.getValue() > 56))" level="error" description="Value above admissible range, max allowed MBs 56!"/>
                  <constraint cond_expr="!(($parent.payloadSize.getValue() == `CAN_PAYLOAD_SIZE_32`) &amp;&amp; ($this.getValue()+$parent.rxBuffNum.getValue() > 48))" level="error" description="Value above admissible range, max allowed MBs 48!"/>
                  <constraint cond_expr="!(($parent.payloadSize.getValue() == `CAN_PAYLOAD_SIZE_16`) &amp;&amp; ($this.getValue()+$parent.rxBuffNum.getValue() > 84))" level="error" description="Value above admissible range, max allowed MBs 84!"/>
               </validation>
            </integer>
            <integer id="rxBuffNum" label="Set Rx maximum number of buffers" type="uint32_t" available="false" options="cStructField">
               <description>Set maximum number of buffers</description>
               <validation>
                  <constraint cond_expr="($this.getValue()+$parent.txBuffNum.getValue() &lt; 129)" level="error" description="Value above admissible range! Rx + Tx Max 128"/>
                  <constraint cond_expr="((($this.getValue()+$parent.txBuffNum.getValue()) > 0) || $configSet.can_fifo_ext2.isRxFIFO_Enable.getValue())" level="error" description="Value below admissible range!"/>
                  <constraint cond_expr="!$configSet.can_fifo_ext2.isRxFIFO_Enable.getValue() || (($parent.txBuffNum.getValue()+$this.getValue()+$configSet.can_fifo_ext2.struct_extension.recommendedMb.getValue().toInt()) &lt; 129)" level="error" description="Decrease 'MBs Number' or decrease number of Rx FIFO filters."/>
                  <constraint cond_expr="!(($parent.payloadSize.getValue() == `CAN_PAYLOAD_SIZE_64`) &amp;&amp; ($this.getValue()+$parent.txBuffNum.getValue() > 56))" level="error" description="Value above admissible range, max allowed MBs 56!"/>
                  <constraint cond_expr="!(($parent.payloadSize.getValue() == `CAN_PAYLOAD_SIZE_32`) &amp;&amp; ($this.getValue()+$parent.txBuffNum.getValue() > 48))" level="error" description="Value above admissible range, max allowed MBs 48!"/>
                  <constraint cond_expr="!(($parent.payloadSize.getValue() == `CAN_PAYLOAD_SIZE_16`) &amp;&amp; ($this.getValue()+$parent.txBuffNum.getValue() > 84))" level="error" description="Value above admissible range, max allowed MBs 84!"/>
               </validation>
            </integer>
            <reference id="mode" label="Operation mode" type="can_operation_modes_t" options="cStructField">
               <description>Set operation mode</description>
            </reference>
            <reference id="peClkSrc" label="PE clock source" type="can_clk_source_t" enable="true" available="featureDefined(`FEATURE_CAN_HAS_PE_CLKSRC_SELECT`)" options="cStructField">
               <description>The clock source of the CAN Protocol Engine (PE).</description>
            </reference>
            <bool id="enableFD" label="Enable flexible data rate" available="featureDefined(`FEATURE_CAN_HAS_FD`)" enable="($parent.maxMB.getValue().toInt() > 16) ? true : false" options="cStructField">
               <description>Enable flexible data rate</description>
            </bool>
            <reference id="payloadSize" label="Set size of buffer payload" type="can_fd_payload_size_t" enable="$parent.enableFD.getValue()" options="cStructField">
               <description>Set size of buffer payload</description>
               <validation>
                    <constraint cond_expr="!($this.getValue() != `CAN_PAYLOAD_SIZE_8` &amp;&amp; $parent.enableFD.getValue() == `false`)" level="error" description="Payload size can be only 8 bytes if Flexible Data Rate not enabled"/>
               </validation>
            </reference>

            <variable id="module_clock_name" label="Clock name" value="`FLEXCAN` + getPeriphInstanceIndex($instance.getPeripheral()).toString()+`_CLK`"/>

            <!-- Get clock frequency of FLEXCAN on S32K1xx -->
            <info id="module_clock_frequency0" label="Module Clock (Hz)" value="getPeripheralClockFrequency($parent.module_clock_name.getValue(), $parent.module_clock_name.getValue(), getClockFunctionalGroups().get(0))" available="!featureDefined(`FEATURE_CAN_HAS_ENHANCED_RX_FIFO`)"/>
            <info id="pe_clock_frequency" label="PE Clock (Hz)" value="getPeripheralClockFrequency($parent.module_clock_name.getValue(), `SOSCDIV2_CLK`, getClockFunctionalGroups().get(0))" available="($parent.peClkSrc.getValue() == `CAN_CLK_SOURCE_OSC`) &amp;&amp; !featureDefined(`FEATURE_CAN_HAS_ENHANCED_RX_FIFO`)">
            <description>Protocol Clock frequency</description>
            <validation>
                 <constraint cond_expr="($parent.module_clock_frequency0.getValue() > $this.getValue())" level="error" description="Module Clock must be greater than PE Clock!"/>
                 <constraint cond_expr="($this.getValue() > 0)" level="error" description="PE Clock must be enabled!"/>
            </validation>
            </info>
            <info id="pe_clock_frequency01" label="PE Clock (Hz)" value="getPeripheralClockFrequency($parent.module_clock_name.getValue(), `SYS_CLK`, getClockFunctionalGroups().get(0))" available="($parent.peClkSrc.getValue() == `CAN_CLK_SOURCE_PERIPH`)">
            <description>Protocol Clock frequency</description>
            <validation>
                 <constraint cond_expr="($parent.module_clock_frequency0.getValue() >= $this.getValue())" level="error" description="Module Clock must be greater than or equal to PE Clock!"/>
                 <constraint cond_expr="($this.getValue() > 0)" level="error" description="PE Clock must be enabled!"/>
            </validation>
            </info>

            <!-- Get clock frequency of FLEXCAN on S32G274A, S32R45, S32S247TV -->
            <info id="module_clock_frequency_0" label="Module Clock (Hz)" value="getPeripheralClockFrequency($instance.getPeripheral(), `XBAR_DIV3_CLK`, getClockFunctionalGroups().get(0))" available="featureDefined(`FEATURE_CAN_HAS_ENHANCED_RX_FIFO`)"/>
            <info id="pe_clock_frequency_0" label="PE Clock (Hz)" value="getPeripheralClockFrequency($instance.getPeripheral(), $parent.module_clock_name.getValue(), getClockFunctionalGroups().get(0))" available="featureDefined(`FEATURE_CAN_HAS_ENHANCED_RX_FIFO`)">
            <description>Protocol Clock frequency</description>
            <validation>
                 <constraint cond_expr="($parent.module_clock_frequency_0.getValue() > $this.getValue())" level="warning" description="Module Clock should be greater than PE Clock!"/>
                 <constraint cond_expr="($this.getValue() > 0)" level="error" description="PE Clock must be enabled!"/>
            </validation>
            </info>

            <!-- Get clock frequency of FLEXCAN on S32V23x -->
            <info id="module_clock_frequency_1" label="Module Clock (Hz)" value="getPeripheralClockFrequency($instance.getPeripheral(), `SYS6_CLK`, getClockFunctionalGroups().get(0))" available="!(featureDefined(`FEATURE_CAN_HAS_PE_CLKSRC_SELECT`)) &amp;&amp; !(featureDefined(`FEATURE_CAN_HAS_ENHANCED_RX_FIFO`))"/>
            <info id="pe_clock_frequency_1" label="PE Clock (Hz)" value="getPeripheralClockFrequency($parent.module_clock_name.getValue(), $parent.module_clock_name.getValue(), getClockFunctionalGroups().get(0))" available="!(featureDefined(`FEATURE_CAN_HAS_PE_CLKSRC_SELECT`)) &amp;&amp; !(featureDefined(`FEATURE_CAN_HAS_ENHANCED_RX_FIFO`))">
            <description>Protocol Clock frequency</description>
            <validation>
             <constraint cond_expr="($parent.module_clock_frequency_1.getValue() > $this.getValue())" level="error" description="Module Clock must be greater than PE Clock!"/>
             <constraint cond_expr="($this.getValue() > 0)" level="error" description="PE Clock must be enabled!"/>
            </validation>
            </info>

            <bool id="can_bitrate2ts" label="Bitrate to time segments">
               <description>Select whether to configure the bitrate and the sampling point or directly the time segments.</description>
            </bool>
            <struct id="flexcan_cfg_time_segments1" label="Bitrate Configuration" from="flexcan_cfg_time_segments1" available="!$parent.can_bitrate2ts.getValue()">
               <reference id="nominalBitrate" label="Arbitration Phase" type="flexcan_time_segment" options="cStructField">
                  <description>Time segments for arbitration phase.</description>
               </reference>
               <reference id="dataBitrate_" label="Data Phase" type="flexcan_time_segment_cbt" options="cStructField" available="$configSet.can_user_config_t2.enableFD.getValue()">
                  <description>Time segments for data phase.</description>
               </reference>
               <reference id="dataBitrate" label="Data Phase" type="flexcan_time_segment_info1" options="cStructField" available="!$configSet.can_user_config_t2.enableFD.getValue()">
                  <description>Time segments for data phase.</description>
               </reference>
            </struct>

            <struct id="flexcan_cfg_time_segments2" label="Bitrate Configuration" from="flexcan_cfg_time_segments2" available="$parent.can_bitrate2ts.getValue()">
               <reference id="nominalBitrate" label="Arbitration Phase" type="flexcan_bitrate" options="cStructField">
                  <description>Time segments for arbitration phase.</description>
               </reference>
               <reference id="dataBitrate_" label="Data Phase" type="flexcan_bitrate_cbt" options="cStructField" available="$configSet.can_user_config_t2.enableFD.getValue()">
                  <description>Time segments for data phase.</description>
               </reference>
               <reference id="dataBitrate" label="Data Phase" type="flexcan_time_segment_info2" options="cStructField" available="!$configSet.can_user_config_t2.enableFD.getValue()">
                  <description>Time segments for data phase.</description>
               </reference>
            </struct>
            <info id="extension" label="Rx FIFO settings"  options="cStructField" value="$configSet.can_fifo_ext2.isRxFIFO_Enable.getValue() ? (`&amp;` + $configSet.can_fifo_ext2.name.getValue()) : `NULL`"/>
         </struct>
         <enum id="flexcan_rx_fifo_id_filter_num_t" label="FlexCAN Rx FIFO filters number" from="flexcan_rx_fifo_id_filter_num_t" from_source="flexcan_driver.h">
            <item id="FLEXCAN_RX_FIFO_ID_FILTERS_8" label="8 Rx FIFO Filters"/>
            <item id="FLEXCAN_RX_FIFO_ID_FILTERS_16" label="16 Rx FIFO Filters"/>
            <item id="FLEXCAN_RX_FIFO_ID_FILTERS_24" label="24 Rx FIFO Filters"/>
            <item id="FLEXCAN_RX_FIFO_ID_FILTERS_32" label="32 Rx FIFO Filters"/>
            <item id="FLEXCAN_RX_FIFO_ID_FILTERS_40" label="40 Rx FIFO Filters"/>
            <item id="FLEXCAN_RX_FIFO_ID_FILTERS_48" label="48 Rx FIFO Filters"/>
            <item id="FLEXCAN_RX_FIFO_ID_FILTERS_56" label="56 Rx FIFO Filters"/>
            <item id="FLEXCAN_RX_FIFO_ID_FILTERS_64" label="64 Rx FIFO Filters"/>
            <item id="FLEXCAN_RX_FIFO_ID_FILTERS_72" label="72 Rx FIFO Filters"/>
            <item id="FLEXCAN_RX_FIFO_ID_FILTERS_80" label="80 Rx FIFO Filters"/>
            <item id="FLEXCAN_RX_FIFO_ID_FILTERS_88" label="88 Rx FIFO Filters"/>
            <item id="FLEXCAN_RX_FIFO_ID_FILTERS_96" label="96 Rx FIFO Filters"/>
            <item id="FLEXCAN_RX_FIFO_ID_FILTERS_104" label="104 Rx FIFO Filters"/>
            <item id="FLEXCAN_RX_FIFO_ID_FILTERS_112" label="112 Rx FIFO Filters"/>
            <item id="FLEXCAN_RX_FIFO_ID_FILTERS_120" label="120 Rx FIFO Filters"/>
            <item id="FLEXCAN_RX_FIFO_ID_FILTERS_128" label="128 Rx FIFO Filters"/>
         </enum>
         <enum id="flexcan_rx_fifo_id_element_format_t" label="ID formats for Rx FIFO" from="flexcan_rx_fifo_id_element_format_t" from_source="flexcan_driver.h">
            <item id="FLEXCAN_RX_FIFO_ID_FORMAT_A" label="One full ID (standard and extended) per ID Filter Table element"/>
            <item id="FLEXCAN_RX_FIFO_ID_FORMAT_B" label="Two full standard IDs or two partial 14-bit (standard and extended) IDs per ID Filter Table element"/>
            <item id="FLEXCAN_RX_FIFO_ID_FORMAT_C" label="Four partial 8-bit Standard IDs per ID Filter Table element"/>
            <item id="FLEXCAN_RX_FIFO_ID_FORMAT_D" label="All frames rejected"/>
         </enum>
         <enum id="can_inst_type_t" label="Instance types" from="can_inst_type_t">
            <item id="CAN_INST_TYPE_FLEXCAN" label="CAN Pal over FlexCAN"/>
         </enum>
         <struct id="flexcan_id_table_t" label="FlexCAN Rx FIFO ID filter table structure" from="flexcan_id_table_t" from_source="flexcan_driver.h">
            <bool id="isRemoteFrame" label="Remote frame">
               <description>Remote frame</description>
            </bool>
            <bool id="isExtendedFrame" label="Extended frame">
               <description>Extended frame</description>
            </bool>
            <integer id="id" label="Rx FIFO ID filter element" type="uint32_t">
               <description>Rx FIFO ID filter element</description>
            </integer>
         </struct>
         <struct id="extension_flexcan_rx_fifo_t" label="FlexCAN Rx FIFO configuration" from="extension_flexcan_rx_fifo_t">
             <bool id="readonly" label="Read-only">
               <description>Specifies the configuration structure access modifier; read-only configuration will be declared const.</description>
            </bool>
            <reference id="numIdFilters" label="The number of Rx FIFO ID filters needed" type="flexcan_rx_fifo_id_filter_num_t" options="cStructField">
               <description>The number of Rx FIFO ID filters needed</description>
            </reference>
            <info id="recommendedMb" label="No. of MBs needed for FIFO filters" value="$configSet.computeMbNo.getValue()"/>
            <reference id="idFormat" label="RX FIFO ID format" type="flexcan_rx_fifo_id_element_format_t" options="cStructField">
               <description>RX FIFO ID format</description>
            </reference>
            <string id="idFilterTable" label="Rx FIFO ID table" options="cStructField">
               <description>Rx FIFO ID table. User must provide it.</description>
               <validation>
                  <constraint cond_expr="$this.getValue().regexMatch(`&amp;?[a-zA-Z]+[a-zA-Z_0-9]*`)" level="error" description="Configuration name must be a valid C identifier!"/>
               </validation>
            </string>
        </struct>
      </generated_types>
      <settings>
         <reference id="can_instance_t2" label="PAL Instance Config" type="can_instance_t">
            <description>CAN PAL Instance</description>
         </reference>
         <reference id="can_user_config_t2" label="CAN Configuration" type="can_user_config_t" available="true">
            <description>CAN PAL User Configuration</description>
         </reference>
         <reference id="can_fifo_ext2" label="RX FIFO Extension" type="can_fifo_ext" available="true">
            <description>CAN PAL FIFO Configuration</description>
         </reference>
         <variable value="$configSet.execScript(`../can_pal/bitrateCalc.js`)" id="bitrateCalc"></variable>
         <variable value="$configSet.execScript(`../can_pal/computeMbNo.js`)" id="computeMbNo"/>
         <variable value="`../can_pal/can_pal_codegen.js`" id="codegen_file"></variable>
         <variable value="`CAN_PALCodeGen`" id="codegen_class"></variable>
         <variable value="`addOsifDefault`" id="toolchain_settings_class"></variable>
         <variable value="`../system/add_osif_to_project.js`" id="toolchain_settings_file"></variable>
         <variable value="`CanToolchainSettings`" id="toolchain_settings_class"></variable>
         <variable value="`../can_pal/CanToolchainSettings.js`" id="toolchain_settings_file"></variable>
      </settings>
      <user_types>
       <struct id="flexcan_time_segment_cbt" label="FlexCAN CBT bitrate" options="ShowContentAs=Table" from="flexcan_time_segment">
            <integer id="propSeg" label="Propagation segment" type="uint32_t" options="cStructField">
               <description>Propagation segment</description>
               <validation>
                  <constraint cond_expr="($this.getValue() &lt; 32)" level="error" description="Value above admissible range! Max 31"/>
                  <constraint cond_expr="($this.getValue() >= 0)" level="error" description="Value below admissible range! Min 0"/>
                  <constraint cond_expr="($this.getValue() + $parent.phaseSeg1.getValue() >= 1)" level="error" description="Sum of Propagation and Phase Segment from Data Phase need to be greater than 0"/>
               </validation>
            </integer>
            <integer id="phaseSeg1" label="Phase segment 1" type="uint32_t" options="cStructField">
               <description>Phase segment 1</description>
               <validation>
                  <constraint cond_expr="($this.getValue() &lt; 8)" level="error" description="Value above admissible range! Max 7"/>
                  <constraint cond_expr="($this.getValue() >= 0)" level="error" description="Value below admissible range! Min 0"/>
               </validation>
            </integer>
            <integer id="phaseSeg2" label="Phase segment 2" type="uint32_t" options="cStructField">
               <description>Phase segment 2</description>
               <validation>
                  <constraint cond_expr="($this.getValue() &lt; 8)" level="error" description="Value above admissible range! Max 7"/>
                  <constraint cond_expr="($this.getValue() >= 1)" level="error" description="Value below admissible range! Min 1"/>
               </validation>
            </integer>
            <integer id="preDivider" label="Prescaler division factor" type="uint32_t" options="cStructField">
               <description>Clock prescaler division factor</description>
               <validation>
                  <constraint cond_expr="($this.getValue() &lt; 1024)" level="error" description="Value above admissible range! Max 1023"/>
                  <constraint cond_expr="($this.getValue() >= 0)" level="error" description="Value below admissible range! Min 0"/>
               </validation>
            </integer>
            <integer id="rJumpwidth" label="Resync jump width" type="uint32_t" value="1" options="cStructField">
               <description>Resync jump width</description>
               <validation>
                  <constraint cond_expr="($this.getValue() &lt; 8)" level="error" description="Value above admissible range! Max 7"/>
                  <constraint cond_expr="($this.getValue() >= 0)" level="error" description="Value below admissible range! Min 0"/>
               </validation>
            </integer>
            <info id="bitrate_cbt_0" label="Bitrate [kbit/s]" value="$configSet.can_user_config_t2.pe_clock_frequency.getValue()/(($parent.preDivider.getValue()+1)*(3+$parent.propSeg.getValue()+$parent.phaseSeg1.getValue()+$parent.phaseSeg2.getValue())*1000)" available="($configSet.can_user_config_t2.peClkSrc.getValue() == `CAN_CLK_SOURCE_OSC`)"/>
            <info id="bitrate_cbt01" label="Bitrate [kbit/s]" value="$configSet.can_user_config_t2.pe_clock_frequency01.getValue()/(($parent.preDivider.getValue()+1)*(3+$parent.propSeg.getValue()+$parent.phaseSeg1.getValue()+$parent.phaseSeg2.getValue())*1000)" available="($configSet.can_user_config_t2.peClkSrc.getValue() == `CAN_CLK_SOURCE_PERIPH`)"/>
            <info id="samplingPoint" label="Sampling point [%]" value="(100*(2+$parent.propSeg.getValue()+$parent.phaseSeg1.getValue())/(3+$parent.propSeg.getValue()+$parent.phaseSeg1.getValue()+$parent.phaseSeg2.getValue()))"/>
        </struct>
        <struct id="flexcan_time_segment" label="FlexCAN bitrate" options="ShowContentAs=Table" from="flexcan_time_segment">
            <integer id="propSeg" label="Propagation segment" type="uint32_t" options="cStructField">
               <description>Propagation segment</description>
               <validation>
                  <constraint cond_expr="!(($this.getValue() > 7) &amp;&amp; $configSet.can_user_config_t2.enableFD.getValue()==`false`)" level="error" description="Value above admissible range! Max 7"/>
                  <constraint cond_expr="!(($this.getValue() > 63) &amp;&amp; $configSet.can_user_config_t2.enableFD.getValue())" level="error" description="Value above admissible range! Max 63"/>
                  <constraint cond_expr="($this.getValue() >= 0)" level="error" description="Value below admissible range! Min 0"/>
               </validation>
            </integer>
            <integer id="phaseSeg1" label="Phase segment 1" type="uint32_t" options="cStructField">
               <description>Phase segment 1</description>
               <validation>
                  <constraint cond_expr="!(($this.getValue() > 7) &amp;&amp; $configSet.can_user_config_t2.enableFD.getValue()==`false`)" level="error" description="Value above admissible range! Max 7"/>
                  <constraint cond_expr="!(($this.getValue() > 31) &amp;&amp; $configSet.can_user_config_t2.enableFD.getValue())" level="error" description="Value above admissible range! Max 31"/>
                  <constraint cond_expr="($this.getValue() >= 0)" level="error" description="Value below admissible range! Min 0"/>
               </validation>
            </integer>
            <integer id="phaseSeg2" label="Phase segment 2" type="uint32_t" options="cStructField">
               <description>Phase segment 2</description>
               <validation>
                  <constraint cond_expr="!(($this.getValue() > 7) &amp;&amp; $configSet.can_user_config_t2.enableFD.getValue()==`false`)" level="error" description="Value above admissible range! Max 7"/>
                  <constraint cond_expr="!(($this.getValue() > 31) &amp;&amp; $configSet.can_user_config_t2.enableFD.getValue())" level="error" description="Value above admissible range! Max 31"/>
                  <constraint cond_expr="!($this.getValue() == 0)" level="error" description="Value below admissible range! Min 1"/>
               </validation>
            </integer>
            <integer id="preDivider" label="Prescaler division factor" type="uint32_t" options="cStructField">
               <description>Clock prescaler division factor</description>
               <validation>
                  <constraint cond_expr="!(($this.getValue() > 255) &amp;&amp; $configSet.can_user_config_t2.enableFD.getValue()==`false`)" level="error" description="Value above admissible range! Max 255"/>
                  <constraint cond_expr="!(($this.getValue() > 1023) &amp;&amp; $configSet.can_user_config_t2.enableFD.getValue())" level="error" description="Value above admissible range! Max 1023"/>
                  <constraint cond_expr="($this.getValue() >= 0)" level="error" description="Value below admissible range! Min 0"/>
               </validation>
            </integer>
            <integer id="rJumpwidth" label="Resync jump width" type="uint32_t" options="cStructField">
               <description>Resync jump width</description>
               <validation>
                  <constraint cond_expr="!(($this.getValue() > 3) &amp;&amp; $configSet.can_user_config_t2.enableFD.getValue()==`false`)" level="error" description="Value above admissible range! Max 3"/>
                  <constraint cond_expr="!(($this.getValue() > 31) &amp;&amp; $configSet.can_user_config_t2.enableFD.getValue())" level="error" description="Value above admissible range! Max 31"/>
                  <constraint cond_expr="($this.getValue() >= 0)" level="error" description="Value below admissible range! Min 0"/>
               </validation>
            </integer>
            <info id="bitrate_0" label="Bitrate [kbit/s]" value="$configSet.can_user_config_t2.pe_clock_frequency.getValue()/(($parent.preDivider.getValue()+1)*(4+$parent.propSeg.getValue()+$parent.phaseSeg1.getValue()+$parent.phaseSeg2.getValue())*1000)" available="($configSet.can_user_config_t2.peClkSrc.getValue() == `CAN_CLK_SOURCE_OSC`)"/>
            <info id="bitrate0" label="Bitrate [kbit/s]" value="$configSet.can_user_config_t2.pe_clock_frequency01.getValue()/(($parent.preDivider.getValue()+1)*(4+$parent.propSeg.getValue()+$parent.phaseSeg1.getValue()+$parent.phaseSeg2.getValue())*1000)" available="($configSet.can_user_config_t2.peClkSrc.getValue() == `CAN_CLK_SOURCE_PERIPH`)"/>
            <info id="samplingPoint" label="Sampling point [%]" value="(100*(3+$parent.propSeg.getValue()+$parent.phaseSeg1.getValue())/(4+$parent.propSeg.getValue()+$parent.phaseSeg1.getValue()+$parent.phaseSeg2.getValue()))"/>
         </struct>
         <struct id="flexcan_bitrate" label="FlexCAN bitrate" options="ShowContentAs=Table" from="flexcan_bitrate">
            <info id="propSeg" label="Propagation segment" value="$configSet.bitrateCalc.getValue().get(3)" options="cStructField"/>
            <info id="phaseSeg1" label="Phase segment 1" value="$configSet.bitrateCalc.getValue().get(1)" options="cStructField"/>
            <info id="phaseSeg2" label="Phase segment 2" value="$configSet.bitrateCalc.getValue().get(2)" options="cStructField"/>
            <info id="preDivider" label="Prescaler division factor" value="$configSet.bitrateCalc.getValue().get(0)" options="cStructField"/>
            <integer id="rJumpwidth" label="Resync jump width" type="uint32_t" value="1" options="cStructField">
               <description>Resync jump width</description>
               <validation>
                  <constraint cond_expr="($this.getValue() &lt; 4)" level="error" description="Value above admissible range! Max 3"/>
                  <constraint cond_expr="($this.getValue() >= 0)" level="error" description="Value below admissible range! Min 0"/>
               </validation>
            </integer>
            <integer id="bitrate" label="Bitrate [kbit/s]" type="uint32_t">
               <description>Bitrate</description>
               <validation>
                  <constraint cond_expr="($this.getValue() &lt; 1001)" level="error" description="Value above admissible range! Max 1000"/>
                  <constraint cond_expr="($this.getValue() > 0)" level="error" description="Value below admissible range! Min 1"/>
               </validation>
            </integer>
            <float id="samplingPoint" label="Sampling point [%]" type="single_precision">
               <description>Sampling point</description>
            </float>
            <info id="flexcan_cf_realbitrate" label="Real bitrate [kbit/s]" value="$configSet.bitrateCalc.getValue().get(4)" />
            <info id="flexcan_cf_realsample" label="Real samplepoint [%]" value="$configSet.bitrateCalc.getValue().get(5)" />
         </struct>
            <struct id="flexcan_bitrate_cbt" label="FlexCAN bitrate" options="ShowContentAs=Table" from="flexcan_bitrate">
            <info id="propSeg" label="Propagation segment" value="$configSet.bitrateCalc.getValue().get(9)" options="cStructField"/>
            <info id="phaseSeg1" label="Phase segment 1" value="$configSet.bitrateCalc.getValue().get(7)" options="cStructField"/>
            <info id="phaseSeg2" label="Phase segment 2" value="$configSet.bitrateCalc.getValue().get(8)" options="cStructField"/>
            <info id="preDivider" label="Prescaler division factor" value="$configSet.bitrateCalc.getValue().get(6)" options="cStructField"/>
            <integer id="rJumpwidth" label="Resync jump width" type="uint32_t" value="1" options="cStructField">
               <description>Resync jump width</description>
               <validation>
                  <constraint cond_expr="($this.getValue() &lt; 8)" level="error" description="Value above admissible range! Max 7"/>
                  <constraint cond_expr="($this.getValue() >= 0)" level="error" description="Value below admissible range! Min 0"/>
               </validation>
            </integer>
            <integer id="bitrate" label="Bitrate [kbit/s]" type="uint32_t">
               <description>Bitrate</description>
               <validation>
                  <constraint cond_expr="($this.getValue() &lt; 8001)" level="error" description="Value above admissible range! Max 8000"/>
                  <constraint cond_expr="($this.getValue() > 0)" level="error" description="Value below admissible range! Min 1"/>
               </validation>
            </integer>
            <float id="samplingPoint" label="Sampling point [%]" type="single_precision">
               <description>Sampling point</description>
            </float>
            <info id="flexcan_cf_realbitrate_" label="Real CBT bitrate" value="$configSet.bitrateCalc.getValue().get(10)" />
            <info id="flexcan_cf_realsample_" label="Real CBT samplepoint" value="$configSet.bitrateCalc.getValue().get(11)" />
         </struct>
         <struct id="flexcan_time_segment_info1" label="FlexCAN bitrate" options="ShowContentAs=Table" from="flexcan_time_segment_info1">
            <info id="propSeg" label="Propagation segment"          value="$configSet.can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.propSeg.getValue()" options="cStructField"/>
            <info id="phaseSeg1" label="Phase segment 1"            value="$configSet.can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.phaseSeg1.getValue()" options="cStructField"/>
            <info id="phaseSeg2" label="Phase segment 2"            value="$configSet.can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.phaseSeg2.getValue()" options="cStructField"/>
            <info id="preDivider" label="Prescaler division factor" value="$configSet.can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.preDivider.getValue()" options="cStructField"/>
            <info id="rJumpwidth" label="Resync jump width"         value="$configSet.can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.rJumpwidth.getValue()" options="cStructField"/>
            <info id="bitrate1" label="Bitrate [kbit/s]"                     value="$configSet.can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.bitrate_0.getValue()"/>
            <info id="samplingPoint" label="Sampling point [%]"         value="$configSet.can_user_config_t2.flexcan_cfg_time_segments1.nominalBitrate.samplingPoint.getValue()"/>
         </struct>
         <struct id="flexcan_time_segment_info2" label="FlexCAN bitrate" options="ShowContentAs=Table" from="flexcan_time_segment_info2">
            <info id="propSeg" label="Propagation segment"          value="$configSet.can_user_config_t2.flexcan_cfg_time_segments2.nominalBitrate.propSeg.getValue()" options="cStructField"/>
            <info id="phaseSeg1" label="Phase segment 1"            value="$configSet.can_user_config_t2.flexcan_cfg_time_segments2.nominalBitrate.phaseSeg1.getValue()" options="cStructField"/>
            <info id="phaseSeg2" label="Phase segment 2"            value="$configSet.can_user_config_t2.flexcan_cfg_time_segments2.nominalBitrate.phaseSeg2.getValue()" options="cStructField"/>
            <info id="preDivider" label="Prescaler division factor" value="$configSet.can_user_config_t2.flexcan_cfg_time_segments2.nominalBitrate.preDivider.getValue()" options="cStructField"/>
            <info id="rJumpwidth" label="Resync jump width"         value="$configSet.can_user_config_t2.flexcan_cfg_time_segments2.nominalBitrate.rJumpwidth.getValue()" options="cStructField"/>
            <info id="bitrate1" label="Bitrate [kbit/s]"                      value="$configSet.can_user_config_t2.flexcan_cfg_time_segments2.nominalBitrate.bitrate.getValue()"/>
            <info id="samplingPoint" label="Sampling point [%]"         value="$configSet.can_user_config_t2.flexcan_cfg_time_segments2.nominalBitrate.samplingPoint.getValue()"/>
         </struct>
        <struct id="can_instance_t" label="Structure storing PAL instance information" from="can_instance_t">
            <description>This structure is used for storing PAL instance information.</description>
            <string id="name" label="Name">
               <description>Configuration name.</description>
               <validation>
                  <constraint cond_expr="isCIdentifier($this.getValue())" level="error" description="Configuration name must be a valid C identifier!"/>
               </validation>
            </string>
            <bool id="readonly" label="Read-only">
               <description>Specifies the configuration structure access modifier; read-only configuration will be declared const.</description>
            </bool>
            <reference id="instType" label="Peripheral over which the PAL is used" type="can_inst_type_t" options="cStructField">
               <description>Peripheral over which the PAL is used</description>
            </reference>
            <info id="instIdx" label="Instance index of the peripheral over which the PAL is used" value="getPeriphInstanceIndex($instance.getPeripheral())" options="cStructField" />
         </struct>
         <struct id="can_fifo_ext" label="Rx FIFO Extension Available">
            <bool id="isRxFIFO_Enable" label="Enable RX FIFO Extension">
                <description>Enable RX FIFO Extension</description>
                <validation>
                    <constraint cond_expr="($this.getValue() == `false` || $configSet.can_user_config_t2.enableFD.getValue() == `false`)" level="error" description="RX FIFO not supported with Flexible Data Rate !"/>
                </validation>
            </bool>
            <string id="name" label="Name" enable="$parent.isRxFIFO_Enable.getValue() &amp;&amp; !$configSet.can_user_config_t2.enableFD.getValue()">
               <description>Configuration name.</description>
               <validation>
                  <constraint cond_expr="isCIdentifier($this.getValue())" level="error" description="Configuration name must be a valid C identifier!"/>
               </validation>
            </string>
            <reference id="struct_extension" label="Config RX FIFO" type="extension_flexcan_rx_fifo_t" enable="$parent.isRxFIFO_Enable.getValue() &amp;&amp; !$configSet.can_user_config_t2.enableFD.getValue()">
                <description>Structure for RX FIFO</description>
            </reference>
         </struct>
         <string id="void *">
         </string>
      </user_types>
   </config_set>
</component:config_component>
