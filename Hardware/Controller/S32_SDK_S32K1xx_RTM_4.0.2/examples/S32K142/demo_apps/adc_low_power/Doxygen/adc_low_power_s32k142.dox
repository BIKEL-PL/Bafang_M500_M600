
/*!
    @page adc_low_power_s32k142_group ADC Low Power
    @brief Demonstrates ADC trigger scheme using TRGMUX and LPIT, switches the power mode to stop and sends data using LPUART and DMA

    ## Application description ##
    ______
    The purpose of this demo application is to show you the usage of a subset of the peripherals found
    on the S32K142 SoC.

    - The application uses LPIT to trigger ADC conversions every 100ms via TRGMUX with the CPU in sleep
    mode. The ADC is using Hardware Compare feature to validate an conversion only if the value is
    greater than half of the reference voltage, in this case \b VDD/2. This way the CPU is woken up from
    sleep mode only if the condition is met.

    - When the conversion is complete the data is transformed into a bar graph and it is sent via LPUART
    using DMA memory to peripheral transfer to the host PC. This way, the CPU can be put into a low
    power mode to reduce the energy used.

	How the example works:
	-   Connect to the serial port using settings found in Notes section
	-   The user should receive an information text on the terminal emulator
	-   The user must press "A" or "a" for the example to run
	-   The potentiometer must be rotated in order to generate valid ADC conversions
	-   Once a valid conversion is done then a bargraph will be printed on the terminal emulator

    ## Prerequisites ##
    ______
    To run the example you will need to have the following items:
    - 1 S32K142 board
    - 1 Power Adapter 12V
    - 1 Personal Computer
    - 1 Jlink Lite Debugger (optional, users can use Open SDA)

    ## Boards supported ##
    ______
    The following boards are supported by this application:
    - S32K142EVB-Q100
    - S32K142-MB

    ## Hardware Wiring ##
    ______
    The following connections must be done to for this example application to work:

    PIN FUNCTION                |	S32K142EVB-Q100	            |	S32K142-MB
    ----------------------------|-------------------------------|-----------------
    LPUART1 TX (\b PTC7)	    | UART_TX - wired on the board 	|	J11.26 - J20.2
    LPUART1 RX (\b PTC6)        | UART_RX - wired on the board  |	J11.25 - J20.5
    ADC0 Input 12 (\b PTC14)    | POT - wired on the board      |   J21.1 - J11.18

    Make sure the following jumpers are set:

    Jumper Name |       S32K142EVB-Q100
    ------------|----------------------------
    J10         | Set jumper on position 2-3

    ## How to run ##
    ______
    #### 1. Importing the project into the workspace ####
    After opening S32 Design Studio, go to \b File -> \b New -> \b S32DS \b Project \b From \bExample and select \b adc_low_power_s32k142. Then click on \b Finish. \n
    The project should now be copied into you current workspace.
    Wait for the S32 Configuration was initialized and ready.
    #### 2. Generating the S32 configuration ####
    The example will run without an active configuration, however if any changes are required, a configuration needs to be generated.
    The initial configuration will have the same settings as the default example settings.
    Right click on the current project, then click "Open S32 Configuration" (it has blue chip symbol on the top of the toolbar).
    In S32 Configuration menu, click on the desired configuration (Pins, Clock, Peripherals, etc.). Clicking on any one of those will generate all the components.
    Pay attention to any error and warning message. If any configured value is invalid, they will be shown for user.
    Make the desired changes (if any) then click "Update Code".
    #### 3. Building the project ####
    Select the configuration to be built \b FLASH (Debug_FLASH) by left clicking on the downward arrow corresponding to the \b build button(@image hammer.png). No RAM configuration
    is available because the elf file does not fit in RAM.
    Wait for the build action to be completed before continuing to the next step.
    #### 4. Running the project ####
    Go to \b Run and select \b Debug \b Configurations. There will be two debug configurations for this project:
    Configuration Name | Description
     -------------------|------------
     \b adc_low_power_s32k142_debug_flash_jlink | Debug the FLASH configuration using Segger Jlink debuggers
     \b adc_low_power_s32k142_debug_flash_pemicro | Debug the FLASH configuration using PEMicro debuggers
    \n Select the desired debug configuration and click on \b Launch. Now the perspective will change to the \b Debug \b Perspective. \n
    Use the controls to control the program flow.

    @note For more detailed information related to S32 Design Studio usage please consult the available documentation.

    ## Notes ##
    ______

    For this example it is necessary to open a terminal emulator and configure it with:
        -   115200 baud
        -   One stop bit
        -   No parity
        -   No flow control
*/
