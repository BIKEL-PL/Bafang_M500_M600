/*!
    @page i2s_pal_slave_s32k142_group I2S PAL SLAVE
    @brief Driver example using I2S

    ## Application description ##
    ______
    The purpose of this application is to show you how to use the i2s_pal driver on the S32K142.

    The application uses one instance of FLEXIO in slave board and one instance of FLEXIO in master board to communicate data via the I2S bus using both of interrupts and DMA
    The application will work in conjunction with the i2s_pal_master demo on S32K1xx.

    The application displays on the host PC terminal a menu in which the user can select to:
    For Slave board:
    "Press:
    1) [Slave] Send data
    2) [Slave] Received data
    Enter your input:"

    For Master board:
    "Press:
    1) [Master] Send data
    2) [Master] Received data
    Enter your input:"

    Select Send/Receive on Slave first. After that select Receive/Send on Master.

    The master buffers and slave buffers will be checked after each transfer by the application, RED or GREEN led will be lit depend on the check result.
    Red led will turn on if data does not match.
    Green led will turn on if then data is transfered correctly.

    ## Prerequisites ##
    ______
    To run the example you will need to have the following items:
    - 2 S32K142 board
    - 1 Personal Computer
    - 4 male to male jump wires
    - 2 J-link Lite Debugger (optional, users can use Open SDA)
    - 2 Power Adapter 12V (if the board can't be powered from the USB)

    ## Boards supported ##
    ______
    The following boards are supported by this application:
    - S32K142-EVB

    ## Hardware Wiring ##
    ______
    The following connections must be done to for this example application to work:

    PIN FUNCTION                |     S32K142-EVB MASTER     |    S32K142-EVB SLAVE
    ----------------------------|----------------------------|----------------------
    FLEXIO SCK                  |       J6.5 (\b PTD9)       |      J1.1(\b PTA2)
    FLEXIO WS                   |       J1.2 (\b PTA11)      |      J1.3(\b PTA3)
    FLEXIO MASTER TX - SLAVE RX |       J5.7 (\b PTA0)       |      J6.19(\b PTA9)
    FLEXIO MASTER RX - SLAVE TX |       J5.5 (\b PTA1)       |      J6.17(\b PTA8)
    RED_LED     (\b PTD15)      | RGB_RED - wired on board   | RGB_RED - wired on board
    GREEN_LED   (\b PTD16)      | RGB_GREEN - wired on board | RGB_GREEN - wired on board
    UART                        |       Wired on board       |      Wired on board

    ## How to run ##

    #### 1. Importing the project into the workspace ####
    After opening S32 Design Studio, go to \b File -> \b New \b S32DS \b Project \b From... and select \b i2s_pal_slave_s32k142. Then click on \b Finish. \n
    The project should now be copied into you current workspace.
    #### 2. Generating the S32 configuration ####
    The example will run without an active configuration, however if any changes are required, a configuration needs to be generated.
    The initial configuration will have the same settings as the default example settings.
    First go to \b Project \b Explorer View in S32 DS and select the current project(\b i2s_pal_slave_s32k142).
    Select the "ConfigTools" menu then click on the desired configuration (Pins, Cocks, Peripherals etc...). Clicking on any one of those will generate all the components.
    Make the desired changes(if any) then click on the "ConfigTools->Update Code" button.
    #### 3. Building the project ####
    Select the configuration to be built \b FLASH (Debug_FLASH) by left clicking on the downward arrow corresponding to the \b build button(@image hammer.png).
    Wait for the build action to be completed before continuing to the next step.
    #### 4. Running the project ####
    Go to \b Run and select \b Debug \b Configurations. There will be two debug configurations for this project:
     Configuration Name | Description
     -------------------|------------
     \b i2s_pal_slave_s32k142_debug_flash_jlink | Debug the FLASH configuration using Segger Jlink debuggers
     \b i2s_pal_slave_s32k142_debug_flash_pemicro | Debug the FLASH configuration using PEMicro debuggers
    \n Select the desired debug configuration and click on \b Launch. Now the perspective will change to the \b Debug \b Perspective. \n
    Use the controls to control the program flow.

    @note For more detailed information related to S32 Design Studio usage please consult the available documentation.

    ## Notes ##
    ______
    For this example it is necessary to open a terminal emulator and configure it with:
    -   9600 baud
    -   One stop bit
    -   No parity
    -   No flow control
    -   '\\n' line ending
*/
