/*!
    @page lpspi_transfer_s32k142_group LPSPI Transfer
    @brief Driver example that will show the LPSPI Master and Slave functionalities

    ## Application description ##
    ______
    The purpose of this application is to show the user how to use the Low Power Serial Peripheral Interface on the S32K142 using the S32 SDK API.

    - The application uses two on board instances of LPSPI, one in master configuration and the other one is slave to communicate data via the SPI bus. Data will be gathered periodically from the ADC input and will be sent to the master device which transforms it into a PWM signal. In this way the potentiometer controls the LED intensity.

    ## Prerequisites ##
    ______
    To run the example you will need to have the following items:
    - 1 S32K142 board
    - 1 Power Adapter 12V (if the board cannot be powered from the USB port)
    - 4(6) Dupont male to male cables
    - 1 Personal Computer
    - 1 Jlink Lite Debugger or 1 PEMicro Debugger (optional, users can use Open SDA)

    ## Boards supported ##
    ______
    The following boards are supported by this application:
    - S32K142EVB-Q100
    - S32K142-MB

    ## Hardware Wiring ##
    ______
    The following connections must be done to for this example application to work:

    PIN FUNCTION    | S32K142EVB-Q100 | S32K142-MB
    ----------------|-----------------|--------------
    LPSPI0 CS (\b PTB0)     |J4.5  - J1.14  |   J10.31 - J12.30
    LPSPI0 SCK  (\b PTB2)   |J2.11 - J4.8   |   J10.29 - J12.31
    LPSPI0 MOSI (\b PTE1)   |J5.14 - J6.3   |   J13.32 - J12.29
    LPSPI0 MISO (\b PTB4)   |J2.7  - J6.2   |   J10.27 - J12.32
    LPSPI1 CS   (\b PTD3)   |J4.5  - J1.14  |   J10.31 - J12.30
    LPSPI1 SCK  (\b PTB14)  |J2.11 - J4.8   |   J10.29 - J12.31
    LPSPI1 MOSI (\b PTD2)   |J5.14 - J6.3   |   J13.32 - J12.29
    LPSPI1 MISO (\b PTD1)   |J2.7  - J6.2   |   J10.27 - J12.32
    ADC0 Input 12 (\b PTC14)| POT - wired on the board  |   J21.1 - J11.18
    LED (\b PTD15)          | LED - wired on the board  |   J12.18 - J5.13

    ## How to run ##
    ______

    #### 1. Importing the project into the workspace ####
    After opening S32 Design Studio, go to \b File -> \b New \b S32DS \b Project \b From... and select \b lpspi_transfer_s32k142. Then click on \b Finish. \n
    The project should now be copied into you current workspace.
    #### 2. Generating the S32 Configuration ####
    The example will run without an active configuration, however if any changes are required, a configuration needs to be generated. \n
    The initial configuration will have the same settings as the default example settings.
    Right click on the current project, then click "Open S32 Configuration" (it has blue chip symbol on the top of the toolbar). \n
    In S32 Configuration menu, click on the desired configuration (Pins, Clock, Peripherals, etc.). Clicking on any one of those will generate all the components. \n
    Pay attention to any error and warning message. If any configured value is invalid, they will be shown for user. \n
    Make the desired changes (if any) then click "Update Code".
    #### 3. Building the project ####
    Select the configuration to be built \b FLASH (Debug_FLASH) by left clicking on the downward arrow corresponding to the \b build button(@image hammer.png). 
    Wait for the build action to be completed before continuing to the next step.
    #### 4. Running the project ####
    Go to \b Run and select \b Debug \b Configurations. There will be two debug configurations for this project:
     Configuration Name | Description
     -------------------|------------
     \b lpspi_transfer_s32k142_debug_flash_jlink   | Debug the FLASH configuration using Segger Jlink debuggers
     \b lpspi_transfer_s32k142_debug_flash_pemicro | Debug the FLASH configuration using PEMicro debuggers
    \n Select the desired debug configuration and click on \b Launch. Now the perspective will change to the \b Debug \b Perspective. \n
    Use the controls to control the program flow.

    @note For more detailed information related to S32 Design Studio usage please consult the available documentation.

    ## Notes ##
    ______
    With 12V power supply, it is recommended to provide 3.3V to MCU. Jump J10.1 - J10.2 should be connected.

*/

