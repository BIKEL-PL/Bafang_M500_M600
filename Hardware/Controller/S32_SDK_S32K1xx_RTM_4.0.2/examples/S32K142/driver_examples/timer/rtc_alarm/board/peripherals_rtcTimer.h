/***********************************************************************************************************************
 * This file was generated by the S32 Config Tools. Any manual edits made to this file
 * will be overwritten if the respective S32 Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef rtcTimer_H
#define rtcTimer_H

/**
 * @page misra_violations MISRA-C:2012 violations
 *
*
 * @section [global]
 * Violates MISRA 2012 Advisory Rule 2.5, Global macro not referenced.
 * The global macro will be used in function call of the module.
 *
 * @section [global]
 * Violates MISRA 2012 Required Rule 8.5, object/function previously declared
 * It is safe, because the file has include guards to prevent multiple declarations of the same object/function.
 */
/*******************************************************************************
 * Included files 
 ******************************************************************************/
#include "rtc_driver.h"

/*******************************************************************************
 * Definitions 
 ******************************************************************************/

/* Device instance number */
#define RTCTIMER  (0U)

/*******************************************************************************
 * Global variables 
 ******************************************************************************/

/*
 * RTC Initialization configurations
 */

/* User configuration 0 */
extern const rtc_init_config_t rtcTimerInitCfg0;
extern const rtc_timedate_t rtcTimerInitCfg0_StartTime;

/*
 * RTC Register Lock configurations
 */

/*
 * RTC Alarm configurations
 */

/* Alarm configuration 0 */
extern rtc_alarm_config_t rtcTimerAlarmCfg0;
/* Callback declaration */
extern void alarmISR(void * callbackParam);

/*
 * RTC Time Seconds Interrupt configurations
 */

/* Time Seconds Interrupt configuration 0 */
extern rtc_seconds_int_config_t rtcTimerSecIntCfg0;
/* Callback declaration */
extern void secondsISR(void * callbackParam);

/*
 * RTC Fault interrupt configurations
 */



#endif /* rtcTimer_H */
