/*!
    @page freemaster_s32k142_group FreeMASTER 
    @brief Example application showing FreeMASTER Serial Communication usage
    
    ## Application description ##
    ______
    The purpose of this demo application is to show you 
    how to use the FreeMASTER serial communication using S32K142 on
    OpenSDA with this SDK.

    This demo uses the FreeMASTER Run-Time Debugging Tool to visualise ADC
    conversions and allows the user to monitor the ADC sampling rate for
    different ADC configurations (ADC sampling time and resolution can be
    controlled through FreeMASTER Application Commands).

    The ADC is configured to perform continous conversions and generate
    an interrupt after each conversion. The LPTMR is configured to generate
    a periodic interrupt at 10 ms which reads the number of ADC conversions.
    
    @note This example will work only in FLASH target.
    
    ## Prerequisites ##
    ______
    To run the example you will need to have the following items:
    - 1 S32K142 board
    - 1 Power Adapter 12V
    - 1 Dupont male to male cable
    - 1 Personal Computer
    - Debug probe (JLink, PEmicro, OpenSDA)
    - FreeMASTER host application 
    
    ## Boards supported ##
    ______
    The following boards are supported by this application:
    - S32K142EVB-Q100
    - S32K142-MB
    
    ## Hardware Wiring ##
    ______
    The following connections must be done to for this example application to work:
    
    PIN FUNCTION    |	S32K142EVB-Q100	        |	S32K142-MB
    ----------------|---------------|--------------
    LPUART1 TX (\b PTC7)	    | UART_TX - wired on the board 	|	J11.26 - J20.2
    LPUART1 RX (\b PTC6)   | UART_RX - wired on the board  |	J11.25 - J20.5
    ADC0 Input 12 (\b PTC14)       | POT - wired on the board         |   J21.1 - J11.18
    
    ## How to run ##
    _____
    #### 1. Importing the project into the workspace ####
    After opening S32 Design Studio, go to \b File -> \b New -> \b S32DS \b Project \b From \bExample and select \b freemaster_s32k142. Then click on \b Finish. \n
    The project should now be copied into you current workspace.
    Wait for the S32 Configuration was initialized and ready.
    #### 2. Generating the S32 configuration ####
    The example will run without an active configuration, however if any changes are required, a configuration needs to be generated.
    The initial configuration will have the same settings as the default example settings.
    Left click on the current project, then click "Open S32 Configuration" (it has blue chip symbol on the top of the toolbar).
    In S32 Configuration menu, click on the desired configurator (Pins, Clock, Peripherals, etc.). Clicking on any one of those will generate all the components.
    Pay attention to any error and warning message. If any configured value is invalid, they will be shown for user.
    Make the desired changes (if any) then click "Update Code".
    #### 3. Building the project ####
    Select the configuration to be built \b FLASH (Debug_FLASH) by left clicking on the downward arrow corresponding to the \b build button(@image hammer.png).     
    Wait for the build action to be completed before continuing to the next step.
    #### 4. Running the project ####
    Go to \b Run and select \b Debug \b Configurations. There will be two debug configurations for this project:
     Configuration Name | Description
     -------------------|------------
     \b freemaster_s32k142_debug_flash_jlink | Debug the FLASH configuration using Segger Jlink debuggers
     \b freemaster_s32k142_debug_flash_pemicro | Debug the FLASH configuration using PEMicro debuggers 
    \n Select the desired debug configuration and click on \b Launch. Now the perspective will change to the \b Debug \b Perspective. \n
    Use the controls to control the program flow.
    
    Open the FreeMASTER project (\b freemaster_s32k142.pmp) and set the communication parameters:
     - Go to \b Project -> \b Options -> \b Comm, choose \b Direct \b RS232 and set the COM port and speed 9600.
     - Go to \b Project -> \b Options -> \b MAP Files and make sure the *.elf file of your project's current Debug Configuration is selected and set file format to ELF/DWARF.
    
    @note For more detailed information related to S32 Design Studio usage please consult the available documentation.
    
    ## Notes ##
    ______
    FreeMASTER host application can be downloaded from NXP's website.
    FreeMASTER Serial Communication is included into the project (V2.0).
*/

